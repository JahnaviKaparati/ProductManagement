#pragma checksum "F:\DotNetBatchJan2021\WebApps\ProductManagement\ProductManagement\Views\Product\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "91b4122a0f4736b65d4230ca21334b33175a4679"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_Index), @"mvc.1.0.view", @"/Views/Product/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\DotNetBatchJan2021\WebApps\ProductManagement\ProductManagement\Views\_ViewImports.cshtml"
using ProductManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\DotNetBatchJan2021\WebApps\ProductManagement\ProductManagement\Views\_ViewImports.cshtml"
using ProductManagement.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"91b4122a0f4736b65d4230ca21334b33175a4679", @"/Views/Product/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e3c080bb828670149ae3d5dcdc557160bd745a88", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<DomainModels.Product>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "F:\DotNetBatchJan2021\WebApps\ProductManagement\ProductManagement\Views\Product\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<h1>Index</h1>
<button type=""button"" id=""btnAllProducts"" class=""btn btn-default"">All Products</button>
<table class=""table product"">
    <tr>
        <th>Image</th>
        <th>Name</th>
        <th>Product Code</th>
        <th>Available</th>
        <th>Price</th>
        <th>Rating</th>
    </tr>
</table>
<!-- Button trigger modal -->
<!-- Modal -->
<div class=""modal fade"" id=""viewProdModel"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
                <h4 class=""modal-title"" id=""myModalLabel"">Product Details</h4>
            </div>
            <div class=""modal-body"">
                <table>
                    <tr>
                        <td>Name</td>
                        <td><span id=""prodNameSpan""></sp");
            WriteLiteral(@"an></td>
                    </tr>
                    <tr>
                        <td>Product Code</td>
                        <td><span id=""prodCodeSpan""></span></td>
                    </tr>
                    <tr>
                        <td>Description</td>
                        <td><span id=""prodDesSpan""></span></td>
                    </tr>
                    <tr>
                        <td>Available</td>
                        <td><span id=""prodAvailSpan""></span></td>
                    </tr>
                    <tr>
                        <td>Price</td>
                        <td><span id=""prodPriceSpan""></span></td>
                    </tr>
                    <tr>
                        <td>Rating</td>
                        <td><span id=""prodRatingSpan""></span></td>
                    </tr>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cl");
            WriteLiteral("ose</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Add New Prod -->\r\n<div class=\"panel panel-primary\">\r\n    <div class=\"panel-heading\">\r\n        New Department\r\n    </div>\r\n    <div class=\"panel-body\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "91b4122a0f4736b65d4230ca21334b33175a46796472", async() => {
                WriteLiteral("\r\n            <div class=\"form-group\">\r\n                <label for=\"DeptName\">Department Name</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Dept names\" id=\"txtDeptName\" />\r\n            </div>\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
    <div class=""panel-footer"">
        <button type=""button"" id=""btnAdd"" class=""btn btn-success"">Save</button>
        <button type=""button"" id=""btnCancel"" class=""btn btn-default"">Cancel</button>
    </div>
</div>

<!--Edit Dept Name-->
<div class=""panel panel-primary"">
    <div class=""panel-heading"">
        Update Department
    </div>
    <div class=""panel-body"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "91b4122a0f4736b65d4230ca21334b33175a46798374", async() => {
                WriteLiteral(@"
            <div class=""form-group"">
                <label for=""DeptName"">Department Id</label>
                <input type=""text"" class=""form-control"" placeholder=""Dept Id"" id=""edittxtDeptId"" disabled=""disabled"" />
            </div>
            <div class=""form-group"">
                <label for=""DeptName"">Department Name</label>
                <input type=""text"" class=""form-control"" placeholder=""Dept names"" id=""edittxtDeptName"" />
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
    <div class=""panel-footer"">
        <button type=""button"" id=""btnEdit"" class=""btn btn-success"">Save</button>
        <button type=""button"" id=""btnCancel"" class=""btn btn-default"">Cancel</button>
    </div>
</div>

<!--Delete Model-->
<div class=""modal fade"" id=""deleteDeptModel"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
                <h4 class=""modal-title"" id=""myModalLabel"">Delete Department</h4>
            </div>
            <div class=""modal-body"">
                <h3>Are you sure, you want to delete the department</h3>
                <table>
                    <tr>
                        <td>DeptId</td>
                        <td><span id=""dDeptIdSpan""></span></td>
                    </t");
            WriteLiteral(@"r>
                    <tr>
                        <td>DeptName</td>
                        <td><span id=""dDeptNameSpan""></span></td>
                    </tr>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"" id=""btnModelDelete"">Delete</button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">cancel</button>
            </div>
        </div>
    </div>
</div>


");
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "91b4122a0f4736b65d4230ca21334b33175a467911794", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $('#btnAllProducts').click(() => {
        $.ajax({
            type: 'GET',
            url: '/api/products',
            success: (response) => {
                for (var i = 0; i < response.length; i++) {
                    var prod = response[i]
                    var str = `<tr>
                               <td> ${i + 1} </td>
                                <td> ${prod.Image} </td>
<td> ${prod.Name} </td>
<td> ${prod.Code} </td>
<td> ${prod.Available} </td>
<td> ${prod.Price} </td>
<td> ${prod.Rating} </td>
                                 
                                   </tr>`
                    $('.product').append(str);
                }
            },
            error: (err) => {
                alert(err)
                console.log(`Error occured:${err}`)
            }
        })
    })

    //Get dept to be deleted in the delete model window
    var deptIdToDelete
    var currentRowToDelete
    $(document).on('click', '.deleteDeptBtn', (even");
            WriteLiteral(@"t) => {
        var did = $(event.target).attr('data-deptId')
        $.ajax({
            type: 'GET',
            url: '/api/departments?id=' + did,
            success: (response) => {
                $('#dDeptIdSpan').html(response.DeptId)
                $('#dDeptNameSpan').html(response.DeptName)
                deptIdToDelete = response.DeptId
            },
            error: (err) => {
                alert(err)
                console.log(`Error occured:${err.statusCode}`)
            }
        })
    })
    $(document).on('click', '.viewDeptBtn', (event) => {

        var did = $(event.target).attr('data-deptId')
        $.ajax({
            type: 'GET',
            url: '/api/departments?id=' + did,
            success: (response) => {
                $('#deptIdSpan').html(response.DeptId)
                $('#deptNameSpan').html(response.DeptName)
            },
            error: (err) => {
                alert(err)
                console.log(`Error occured:${err}`)");
            WriteLiteral(@"
            }
        })
    })
    //get data in update form when user clickes on edit button
    var currentRow

    $(document).on('click', '.editDeptBtn', (event) => {

        var did = $(event.target).attr('data-deptId')
        currentRow = $(event.target).parent().parent()
        $.ajax({
            type: 'GET',
            url: '/api/departments?id=' + did,
            success: (response) => {
                $('#edittxtDeptId').val(response.DeptId);
                $('#edittxtDeptName').val(response.DeptName)
            },
            error: (err) => {
                alert(err)
                console.log(`Error occured:${err}`)
            }
        })
    })

    $('#btnAdd').click(() => {
        var deptName = $('#txtDeptName').val()
        $.ajax({
            url: '/api/departments',
            type: 'POST',
            data: {
                'deptname': deptName
                //OR
                //deptName
            },
            success: (respo");
            WriteLiteral(@"nse) => {
                var deptCount = $('#deptsTable tr').length - 1
                var str = `<tr>
                    <td>$Tot Depts:${deptCount}</td>
                     <td> ${deptName} </td>
                     <td><button type=""button"" class=""btn btn-info viewDeptBtn""
                        data-toggle=""modal""
                      data-target=""#viewDeptModel"">Details</button></td>
                      </tr>`
                $('#deptsTable').append(str)
            },
            error: (err) => {
                alert(err.statusCode)
            }

        })
    })

    $('#btnEdit').click(() => {
        var deptId = $('#edittxtDeptId').val()
        var deptName = $('#edittxtDeptName').val()
        $.ajax({
            url: '/api/departments/' + deptId,
            type: 'PUT',
            data: {
                'deptId': deptId,
                'deptName': deptName
            },
            success: (response) => {
                currentRow.find('td:eq(0)'.");
            WriteLiteral(@"html(deptId))
                currentRow.find('td:eq(1)'.html(deptName))
            },
            error: (err) => {
                alert(err.statusCode)
            }

        })
    })

    $('#btnModelDelete').click(() => {
        $.ajax({
            type: 'DELETE',
            url: '/api/Departments?id=' + deptIdToDelete,
            success: (response) => {
                //currentRowToDelete.remove('td:eq(0)'.html(deptId))
                //currentRowToDelete.remove('td:eq(1)'.html(deptName))
                currentRowToDelete.remove()
            },
            error: (err) => {
                alert(err.statusCode)
            }
        })
    })

</script>



");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<DomainModels.Product>> Html { get; private set; }
    }
}
#pragma warning restore 1591
